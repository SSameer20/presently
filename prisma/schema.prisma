// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id          String         @id             @default(uuid())
  email       String      @unique
  password    String
  account     String
  history     Slides[]
  accounts      Account[]
  sessions      Session[]
  
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String  @unique
  refresh_token     String?  
  access_token      String?  
  expires_at        Int?      
  token_type        String?  
  scope             String?  
  id_token          String?  
  session_state     String?  

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
model Slides {
  id           Int                           @id @default(autoincrement())
  userId       String
  slides       Slide[]  
  user         User                          @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Slide {
  id               Int                       @id @default(autoincrement())
  slidesId         Int
  title            String
  description      String
  list             String[] 
  slides           Slides                    @relation(fields: [slidesId], references: [id], onDelete: Cascade)
}
